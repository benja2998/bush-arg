#!/usr/bin/env bash
#
# Standard functions.

basename() {
    # Get the basename of a path.
    # Usage: basename "path"
    printf "%s\\n" "${1##*/}"
}

dirname() {
    # Get the dirname of a path.
    # Usage: dirname "path"
    printf "%s\\n" "${1%/*}/"
}

strip() {
    # Strip characters from a string.
    # Usage: strip "string" "chars to remove"
    printf "%s\\n" "${1//$2}"
}

rstrip() {
    # Strip characters from the end of a string.
    # Usage: rstrip "string" "chars to remove"
    printf "%s\\n" "${1%%$2}"
}

lstrip() {
    # Strip characters from the start of a string.
    # Usage: lstrip "string" "chars to remove"
    printf "%s\\n" "${1##$2}"
}

# shellcheck disable=2086
trim() {
    # Trim whitespace from a string.
    # Usage: trim "string"
    set -f
    echo -E ${1//[[:space:]]/ }
    set +f
}

lower() {
    # Lowercase a string.
    # Usage: lower "string"
    printf "%s\\n" "${1,,}"
}

upper() {
    # Uppercase a string.
    # Usage: lower "string"
    printf "%s\\n" "${1^^}"
}

date() {
    # Output the date/time.
    # Usage: date "format"
    printf "%($1)T\\n"
}

head() {
    # Output n lines from the start of a file.
    # Usage: head "n" "file"
    local lines
    lines=$((${1:-1}>0?${1:-10}:10))
    mapfile -tn "$lines" line < "${2:-${1:-/etc/os-release}}"
    printf "%s\\n" "${line[@]}"
}

tail() {
    # Output n lines from the end of a file.
    # Usage: tail "n" "file"
    local lines
    lines=$((${1:-1}>0?${1:-10}:10))
    mapfile -tn 0 line < "${2:-${1:-/etc/os-release}}"

    f(){ line=("${BASH_ARGV[@]}"); }
    shopt -s extdebug
    f "${line[@]}"
    shopt -u extdebug

    printf "%s\\n" "${line[@]:0:${lines}}"
}
